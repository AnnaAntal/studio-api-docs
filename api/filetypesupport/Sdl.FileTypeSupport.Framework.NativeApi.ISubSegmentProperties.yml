### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties
  id: ISubSegmentProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Contexts
  - Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Length
  - Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.StartOffset
  langs:
  - csharp
  - vb
  name: ISubSegmentProperties
  nameWithType: ISubSegmentProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nSub-segments are, for example, localizable tag attributes. During conversion to \nbilingual format, every sub-segment will end up in its own paragraph unit.\n\nThe properties StartOffset and Length are required in order to put the translations\nback into the right places.\n"
  syntax:
    content: 'public interface ISubSegmentProperties : ICloneable'
    content.vb: >-
      Public Interface ISubSegmentProperties

          Inherits ICloneable
  inheritedMembers:
  - System.ICloneable.Clone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Length
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Length
  id: Length
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: ISubSegmentProperties.Length
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Length
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nNumber of characters that the sub-segment spans\n"
  syntax:
    content: int Length { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Length As Integer
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Length*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.StartOffset
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.StartOffset
  id: StartOffset
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties
  langs:
  - csharp
  - vb
  name: StartOffset
  nameWithType: ISubSegmentProperties.StartOffset
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.StartOffset
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe index of the first character of the sub-segment in the text where it appears.\n"
  syntax:
    content: int StartOffset { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property StartOffset As Integer
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.StartOffset*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Contexts
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Contexts
  id: Contexts
  parent: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties
  langs:
  - csharp
  - vb
  name: Contexts
  nameWithType: ISubSegmentProperties.Contexts
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Contexts
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nContext information for the sub-segment.\n"
  remarks: "\n<p>\nCan be <code>null</code> if no explicit context information is associated with this sub-segment.\n</p>\n<p>\nDuring conversion from native to bilingual, any contexts in this collection get propagated\nto the paragraph unit that contains the actual localizable content of the sub-segment. If this\nproperty is <code>null</code>, a default &quot;Tag content&quot; context is created to let users know that they\nare looking at content that appears inside a tag.\n</p>\n<p>\nIn addition, during conversion from native to bilingual a sub-segment reference context is \nadded to this collection in order to facilitate navigation from the sub-segment paragraph\nunit to the paragraph unit that contains the actual localizable content. All contexts added\nby the framework during native to bilingual conversion are removed during conversion \nfrom bilingual back to native format.\n</p>\n"
  syntax:
    content: IContextProperties Contexts { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
    content.vb: Property Contexts As IContextProperties
  overload: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Contexts*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Length*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Length
  isExternal: true
  name: Length
  nameWithType: ISubSegmentProperties.Length
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.StartOffset*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.StartOffset
  isExternal: true
  name: StartOffset
  nameWithType: ISubSegmentProperties.StartOffset
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.StartOffset
- uid: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Contexts*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Contexts
  isExternal: true
  name: Contexts
  nameWithType: ISubSegmentProperties.Contexts
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.ISubSegmentProperties.Contexts
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IContextProperties
  nameWithType: IContextProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IContextProperties

### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  id: LockTypeFlags
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Externalized
  - Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Manual
  - Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Structure
  - Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Unlocked
  langs:
  - csharp
  - vb
  name: LockTypeFlags
  nameWithType: LockTypeFlags
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  type: Enum
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nEnumterator that contains the available lock types\n"
  syntax:
    content: >-
      [Flags]

      public enum LockTypeFlags
    content.vb: >-
      <Flags>

      Public Enum LockTypeFlags
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Unlocked
  commentId: F:Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Unlocked
  id: Unlocked
  parent: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  langs:
  - csharp
  - vb
  name: Unlocked
  nameWithType: LockTypeFlags.Unlocked
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Unlocked
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe content is not locked.\n"
  remarks: "\n<p>\nThis value should never be used with locked content items in the bilingual API,\nbut it is used in paragraph unit properties for paragraph units that are not locked.\n</p>\n"
  syntax:
    content: Unlocked = 0
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Structure
  commentId: F:Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Structure
  id: Structure
  parent: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  langs:
  - csharp
  - vb
  name: Structure
  nameWithType: LockTypeFlags.Structure
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Structure
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nApplied to structure paragraph units in the bilingual API.\n"
  syntax:
    content: Structure = 1
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Externalized
  commentId: F:Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Externalized
  id: Externalized
  parent: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  langs:
  - csharp
  - vb
  name: Externalized
  nameWithType: LockTypeFlags.Externalized
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Externalized
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nApplied to paragraph units in the bilingual API when a document has been split\ninto multiple instances, so that multiple translators, for example, can work on it\nsimultaneously. This lock type is applied automatically to paragraph units that\nshould not be translated in this file (when they should be translated in a different\nfile instead).\n"
  syntax:
    content: Externalized = 2
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Manual
  commentId: F:Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Manual
  id: Manual
  parent: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  langs:
  - csharp
  - vb
  name: Manual
  nameWithType: LockTypeFlags.Manual
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags.Manual
  type: Field
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nA lock that was explicitly inserted, as opposed to an automatically generated lock\n"
  remarks: "\n<p>\nThe structure and externalized locks are automatically generated. This flag\nshould be used when someone explicitly locks a paragraph unit in the bilingual API.\n</p>\n"
  syntax:
    content: Manual = 4
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: LockTypeFlags
  nameWithType: LockTypeFlags
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.LockTypeFlags

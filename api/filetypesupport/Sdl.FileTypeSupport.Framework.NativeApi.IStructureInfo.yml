### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  id: IStructureInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ContextInfo
  - Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.Id
  - Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.MustUseDisplayName
  - Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ParentStructure
  langs:
  - csharp
  - vb
  name: IStructureInfo
  nameWithType: IStructureInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nStructural information to help define how a context should act in \na structural tree.\n"
  syntax:
    content: 'public interface IStructureInfo : ICloneable'
    content.vb: >-
      Public Interface IStructureInfo

          Inherits ICloneable
  inheritedMembers:
  - System.ICloneable.Clone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ContextInfo
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ContextInfo
  id: ContextInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  langs:
  - csharp
  - vb
  name: ContextInfo
  nameWithType: IStructureInfo.ContextInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ContextInfo
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe context to be used to help define the structure of the document\n"
  syntax:
    content: IContextInfo ContextInfo { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo
    content.vb: Property ContextInfo As IContextInfo
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ContextInfo*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.MustUseDisplayName
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.MustUseDisplayName
  id: MustUseDisplayName
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  langs:
  - csharp
  - vb
  name: MustUseDisplayName
  nameWithType: IStructureInfo.MustUseDisplayName
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.MustUseDisplayName
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nTrue if the display name provided by the context is the one that must\nalways be used when displaying the context in a structural tree, etc.\nThis is usually the case if a context does not have any other text associated\nwith it, for example, an image or a table. If this is false, the client\napplication can try and display some more useful information to the\nuser, for example, the corresponding text in a\nparagraph context.\n"
  syntax:
    content: bool MustUseDisplayName { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property MustUseDisplayName As Boolean
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.MustUseDisplayName*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ParentStructure
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ParentStructure
  id: ParentStructure
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  langs:
  - csharp
  - vb
  name: ParentStructure
  nameWithType: IStructureInfo.ParentStructure
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ParentStructure
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThe structural info of which this context is a child\n"
  syntax:
    content: IStructureInfo ParentStructure { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
    content.vb: Property ParentStructure As IStructureInfo
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ParentStructure*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.Id
  commentId: P:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.Id
  id: Id
  parent: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IStructureInfo.Id
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.Id
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nA unique id for this structure info. This id is generated\nautomatically by the implementation, and cannot be changed.\n"
  remarks: "\nThis id is ignored when comparing objects through \nthe Equals() implementation. \nThis is used to facilitate comparison of different instances with the\nsame properties.\n"
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Id As String
  overload: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ContextInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ContextInfo
  isExternal: true
  name: ContextInfo
  nameWithType: IStructureInfo.ContextInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ContextInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IContextInfo
  nameWithType: IContextInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IContextInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.MustUseDisplayName*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.MustUseDisplayName
  isExternal: true
  name: MustUseDisplayName
  nameWithType: IStructureInfo.MustUseDisplayName
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.MustUseDisplayName
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ParentStructure*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ParentStructure
  isExternal: true
  name: ParentStructure
  nameWithType: IStructureInfo.ParentStructure
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.ParentStructure
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IStructureInfo
  nameWithType: IStructureInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.Id*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.Id
  isExternal: true
  name: Id
  nameWithType: IStructureInfo.Id
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IStructureInfo.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String

### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker
  id: INativeLocationTracker
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationAfterCurrentContent
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationBeforeCurrentContent
  langs:
  - csharp
  - vb
  name: INativeLocationTracker
  nameWithType: INativeLocationTracker
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nProvided by the framework to the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeFileWriter\" data-throw-if-not-resolved=\"false\"></xref> in order to \nhelp generate locations for any messages that are reported through the\n<xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeTextLocationMessageReporter\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  syntax:
    content: public interface INativeLocationTracker
    content.vb: Public Interface INativeLocationTracker
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationBeforeCurrentContent
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationBeforeCurrentContent
  id: GetLocationBeforeCurrentContent
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker
  langs:
  - csharp
  - vb
  name: GetLocationBeforeCurrentContent()
  nameWithType: INativeLocationTracker.GetLocationBeforeCurrentContent()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationBeforeCurrentContent()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nReturns a text location that corresponds to the start of the content that has\njust been passed to the native file writer.\n"
  syntax:
    content: NativeTextLocation GetLocationBeforeCurrentContent()
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    content.vb: Function GetLocationBeforeCurrentContent As NativeTextLocation
  overload: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationBeforeCurrentContent*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationAfterCurrentContent
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationAfterCurrentContent
  id: GetLocationAfterCurrentContent
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker
  langs:
  - csharp
  - vb
  name: GetLocationAfterCurrentContent()
  nameWithType: INativeLocationTracker.GetLocationAfterCurrentContent()
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationAfterCurrentContent()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nReturns a text location that corresponds to the end of the content that has\njust been passed to the native file writer.\n"
  syntax:
    content: NativeTextLocation GetLocationAfterCurrentContent()
    return:
      type: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
    content.vb: Function GetLocationAfterCurrentContent As NativeTextLocation
  overload: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationAfterCurrentContent*
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationBeforeCurrentContent*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationBeforeCurrentContent
  isExternal: true
  name: GetLocationBeforeCurrentContent
  nameWithType: INativeLocationTracker.GetLocationBeforeCurrentContent
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationBeforeCurrentContent
- uid: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: NativeTextLocation
  nameWithType: NativeTextLocation
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.NativeTextLocation
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationAfterCurrentContent*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationAfterCurrentContent
  isExternal: true
  name: GetLocationAfterCurrentContent
  nameWithType: INativeLocationTracker.GetLocationAfterCurrentContent
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeLocationTracker.GetLocationAfterCurrentContent

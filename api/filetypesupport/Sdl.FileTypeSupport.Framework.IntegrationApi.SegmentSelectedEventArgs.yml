### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
  id: SegmentSelectedEventArgs
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor
  - Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor(Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview,Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.OriginatingPreview
  - Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SelectedSegment
  langs:
  - csharp
  - vb
  name: SegmentSelectedEventArgs
  nameWithType: SegmentSelectedEventArgs
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInformation passed in the <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview.SegmentSelected\" data-throw-if-not-resolved=\"false\"></xref> event\n"
  syntax:
    content: 'public class SegmentSelectedEventArgs : EventArgs'
    content.vb: >-
      Public Class SegmentSelectedEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
  langs:
  - csharp
  - vb
  name: SegmentSelectedEventArgs()
  nameWithType: SegmentSelectedEventArgs.SegmentSelectedEventArgs()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SegmentSelectedEventArgs()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreates an uninitialized object.\n"
  syntax:
    content: public SegmentSelectedEventArgs()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor(Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview,Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor(Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview,Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  id: '#ctor(Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview,Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)'
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
  langs:
  - csharp
  - vb
  name: SegmentSelectedEventArgs(INavigablePreview, SegmentReference)
  nameWithType: SegmentSelectedEventArgs.SegmentSelectedEventArgs(INavigablePreview, SegmentReference)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SegmentSelectedEventArgs(Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview, Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference)
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nInitializes with the specified preview instance and segment reference.\n"
  syntax:
    content: public SegmentSelectedEventArgs(INavigablePreview originatingPreview, SegmentReference selectedSegment)
    parameters:
    - id: originatingPreview
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
      description: Preview the segment from which the selection originates
    - id: selectedSegment
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
      description: The selected segment
    content.vb: Public Sub New(originatingPreview As INavigablePreview, selectedSegment As SegmentReference)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SelectedSegment
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SelectedSegment
  id: SelectedSegment
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
  langs:
  - csharp
  - vb
  name: SelectedSegment
  nameWithType: SegmentSelectedEventArgs.SelectedSegment
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SelectedSegment
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nReference to the segment the user has selected\n"
  syntax:
    content: public SegmentReference SelectedSegment { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
    content.vb: Public Property SelectedSegment As SegmentReference
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SelectedSegment*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.OriginatingPreview
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.OriginatingPreview
  id: OriginatingPreview
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs
  langs:
  - csharp
  - vb
  name: OriginatingPreview
  nameWithType: SegmentSelectedEventArgs.OriginatingPreview
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.OriginatingPreview
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nThe preview from which the event originates\n"
  syntax:
    content: public INavigablePreview OriginatingPreview { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
    content.vb: Public Property OriginatingPreview As INavigablePreview
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.OriginatingPreview*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.#ctor
  isExternal: true
  name: SegmentSelectedEventArgs
  nameWithType: SegmentSelectedEventArgs.SegmentSelectedEventArgs
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SegmentSelectedEventArgs
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: INavigablePreview
  nameWithType: INavigablePreview
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.INavigablePreview
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: SegmentReference
  nameWithType: SegmentReference
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentReference
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SelectedSegment*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SelectedSegment
  isExternal: true
  name: SelectedSegment
  nameWithType: SegmentSelectedEventArgs.SelectedSegment
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.SelectedSegment
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.OriginatingPreview*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.OriginatingPreview
  isExternal: true
  name: OriginatingPreview
  nameWithType: SegmentSelectedEventArgs.OriginatingPreview
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.SegmentSelectedEventArgs.OriginatingPreview

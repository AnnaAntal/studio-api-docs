### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh
  id: IPreviewUpdatedViaRefresh
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.AfterFileRefresh
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.BeforeFileRefresh
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath
  langs:
  - csharp
  - vb
  name: IPreviewUpdatedViaRefresh
  nameWithType: IPreviewUpdatedViaRefresh
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nDefines the protocol used for updating real-time previews through\na file refresh mechanism, by which the same file gets overwritten and\nre-loaded in the preview when target content changes in the editor\n(typically when a segment is confirmed by the user).\n"
  syntax:
    content: 'public interface IPreviewUpdatedViaRefresh : IAbstractUpdatablePreview'
    content.vb: >-
      Public Interface IPreviewUpdatedViaRefresh

          Inherits IAbstractUpdatablePreview
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.BeforeFileRefresh
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.BeforeFileRefresh
  id: BeforeFileRefresh
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh
  langs:
  - csharp
  - vb
  name: BeforeFileRefresh()
  nameWithType: IPreviewUpdatedViaRefresh.BeforeFileRefresh()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.BeforeFileRefresh()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the host application when the preview is about to be updated,\nbefore the file at <xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath\" data-throw-if-not-resolved=\"false\"></xref> is overwritten.\n"
  remarks: "\n<p>\nThis call allows the implementation to release\nany file locks and/or try to &apos;remember&apos; the current location of the file\nbefore it is overwritten.\n</p>\n"
  syntax:
    content: void BeforeFileRefresh()
    content.vb: Sub BeforeFileRefresh
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.BeforeFileRefresh*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.AfterFileRefresh
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.AfterFileRefresh
  id: AfterFileRefresh
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh
  langs:
  - csharp
  - vb
  name: AfterFileRefresh()
  nameWithType: IPreviewUpdatedViaRefresh.AfterFileRefresh()
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.AfterFileRefresh()
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCalled by the host application after the preview file has been successfully\noverwritten.\n"
  remarks: "\n<p>\nThe implementation typically re-loads (refreshes) the file in the preview\nand (if necessary) navigates to the previously displaying content.\n</p>\n"
  syntax:
    content: void AfterFileRefresh()
    content.vb: Sub AfterFileRefresh
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.AfterFileRefresh*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath
  commentId: P:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath
  id: TargetFilePath
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh
  langs:
  - csharp
  - vb
  name: TargetFilePath
  nameWithType: IPreviewUpdatedViaRefresh.TargetFilePath
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFull path to the target language file that is overwritten when\nthe preview is refreshed. This path is typically set once and stays unchanged during\nthe lifetime of the preview.\n"
  syntax:
    content: TempFileManager TargetFilePath { get; set; }
    parameters: []
    return:
      type: Sdl.FileTypeSupport.Framework.TempFileManager
    content.vb: Property TargetFilePath As TempFileManager
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath*
  modifiers.csharp:
  - get
  - set
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.BeforeFileRefresh*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.BeforeFileRefresh
  isExternal: true
  name: BeforeFileRefresh
  nameWithType: IPreviewUpdatedViaRefresh.BeforeFileRefresh
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.BeforeFileRefresh
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.AfterFileRefresh*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.AfterFileRefresh
  isExternal: true
  name: AfterFileRefresh
  nameWithType: IPreviewUpdatedViaRefresh.AfterFileRefresh
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.AfterFileRefresh
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath
  isExternal: true
  name: TargetFilePath
  nameWithType: IPreviewUpdatedViaRefresh.TargetFilePath
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IPreviewUpdatedViaRefresh.TargetFilePath
- uid: Sdl.FileTypeSupport.Framework.TempFileManager
  commentId: T:Sdl.FileTypeSupport.Framework.TempFileManager
  parent: Sdl.FileTypeSupport.Framework
  isExternal: true
  name: TempFileManager
  nameWithType: TempFileManager
  fullName: Sdl.FileTypeSupport.Framework.TempFileManager
- uid: Sdl.FileTypeSupport.Framework
  commentId: N:Sdl.FileTypeSupport.Framework
  isExternal: true
  name: Sdl.FileTypeSupport.Framework
  nameWithType: Sdl.FileTypeSupport.Framework
  fullName: Sdl.FileTypeSupport.Framework

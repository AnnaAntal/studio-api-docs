### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties
  id: TempFileProperties
  parent: Sdl.FileTypeSupport.Framework.PreviewControls
  children:
  - Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.#ctor
  - Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ExtensionMaps
  - Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.Locked
  - Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ReadOnly
  - Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.SinglePreview
  langs:
  - csharp
  - vb
  name: TempFileProperties
  nameWithType: TempFileProperties
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties
  type: Class
  source:
    path: Sdl.FileTypeSupport.Framework.PreviewControls
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.PreviewControls
  namespace: Sdl.FileTypeSupport.Framework.PreviewControls
  summary: "\nAn properties class that can be used as a properties holder for tempoary files created in order to perform a preview.\n"
  syntax:
    content: public class TempFileProperties
    content.vb: Public Class TempFileProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.#ctor
  commentId: M:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.#ctor
  id: '#ctor'
  parent: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties
  langs:
  - csharp
  - vb
  name: TempFileProperties()
  nameWithType: TempFileProperties.TempFileProperties()
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.TempFileProperties()
  type: Constructor
  source:
    path: Sdl.FileTypeSupport.Framework.PreviewControls
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.PreviewControls
  namespace: Sdl.FileTypeSupport.Framework.PreviewControls
  syntax:
    content: public TempFileProperties()
    content.vb: Public Sub New
  overload: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ReadOnly
  commentId: P:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ReadOnly
  id: ReadOnly
  parent: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: TempFileProperties.ReadOnly
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ReadOnly
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.PreviewControls
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.PreviewControls
  namespace: Sdl.FileTypeSupport.Framework.PreviewControls
  summary: "\nSet if preview file ReadOnly attribute should be set\n"
  syntax:
    content: public bool ReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ReadOnly As Boolean
  overload: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ReadOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.Locked
  commentId: P:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.Locked
  id: Locked
  parent: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties
  langs:
  - csharp
  - vb
  name: Locked
  nameWithType: TempFileProperties.Locked
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.Locked
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.PreviewControls
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.PreviewControls
  namespace: Sdl.FileTypeSupport.Framework.PreviewControls
  summary: "\nSet if preview file should be locked to prevent deleting/writing by another process.\n"
  syntax:
    content: public bool Locked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Locked As Boolean
  overload: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.Locked*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.SinglePreview
  commentId: P:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.SinglePreview
  id: SinglePreview
  parent: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties
  langs:
  - csharp
  - vb
  name: SinglePreview
  nameWithType: TempFileProperties.SinglePreview
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.SinglePreview
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.PreviewControls
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.PreviewControls
  namespace: Sdl.FileTypeSupport.Framework.PreviewControls
  summary: "\nSet if only one preview is allowed for each document (FileId).\n"
  syntax:
    content: public bool SinglePreview { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SinglePreview As Boolean
  overload: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.SinglePreview*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ExtensionMaps
  commentId: P:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ExtensionMaps
  id: ExtensionMaps
  parent: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties
  langs:
  - csharp
  - vb
  name: ExtensionMaps
  nameWithType: TempFileProperties.ExtensionMaps
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ExtensionMaps
  type: Property
  source:
    path: Sdl.FileTypeSupport.Framework.PreviewControls
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.PreviewControls
  namespace: Sdl.FileTypeSupport.Framework.PreviewControls
  summary: "\nA list of filter extensions that need to be mapped to other extensions before previewing.\nFor example mappping .csv to .csv.txt files so they can be previewed in an IE browser control.\n"
  syntax:
    content: public string[] ExtensionMaps { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property ExtensionMaps As String()
  overload: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ExtensionMaps*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Sdl.FileTypeSupport.Framework.PreviewControls
  commentId: N:Sdl.FileTypeSupport.Framework.PreviewControls
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.PreviewControls
  nameWithType: Sdl.FileTypeSupport.Framework.PreviewControls
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.#ctor*
  commentId: Overload:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.#ctor
  isExternal: true
  name: TempFileProperties
  nameWithType: TempFileProperties.TempFileProperties
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.TempFileProperties
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ReadOnly*
  commentId: Overload:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ReadOnly
  isExternal: true
  name: ReadOnly
  nameWithType: TempFileProperties.ReadOnly
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.Locked*
  commentId: Overload:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.Locked
  isExternal: true
  name: Locked
  nameWithType: TempFileProperties.Locked
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.Locked
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.SinglePreview*
  commentId: Overload:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.SinglePreview
  isExternal: true
  name: SinglePreview
  nameWithType: TempFileProperties.SinglePreview
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.SinglePreview
- uid: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ExtensionMaps*
  commentId: Overload:Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ExtensionMaps
  isExternal: true
  name: ExtensionMaps
  nameWithType: TempFileProperties.ExtensionMaps
  fullName: Sdl.FileTypeSupport.Framework.PreviewControls.TempFileProperties.ExtensionMaps
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

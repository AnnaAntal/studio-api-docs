### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware
  id: INativeOutputSettingsAware
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  children:
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  - Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties)
  langs:
  - csharp
  - vb
  name: INativeOutputSettingsAware
  nameWithType: INativeOutputSettingsAware
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThis interface needs to be implemented by any components that should be  \n&apos;aware&apos; of which settings are used when writing native files.\n\nThe <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties)\" data-throw-if-not-resolved=\"false\"></xref> method will be invoked\nbefore the content of each native file is processed.\n"
  syntax:
    content: public interface INativeOutputSettingsAware
    content.vb: Public Interface INativeOutputSettingsAware
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties)
  id: SetOutputProperties(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware
  langs:
  - csharp
  - vb
  name: SetOutputProperties(INativeOutputFileProperties)
  nameWithType: INativeOutputSettingsAware.SetOutputProperties(INativeOutputFileProperties)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nThis method is invoked by the framework before processing content\nfrom each native file. The properties passed to this method\nindicate whether source or target language content will be included in the output.\nIt also communicates other important properties such as the\nname of the output file to be created and what encoding should\nbe used.\n"
  syntax:
    content: void SetOutputProperties(INativeOutputFileProperties properties)
    parameters:
    - id: properties
      type: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties
    content.vb: Sub SetOutputProperties(properties As INativeOutputFileProperties)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties*
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  commentId: M:Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  id: GetProposedOutputFileInfo(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties,Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  parent: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware
  langs:
  - csharp
  - vb
  name: GetProposedOutputFileInfo(IPersistentFileConversionProperties, IOutputFileInfo)
  nameWithType: INativeOutputSettingsAware.GetProposedOutputFileInfo(IPersistentFileConversionProperties, IOutputFileInfo)
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo(Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties, Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.NativeApi
  summary: "\nAllows a file type component to suggest a file name for the output\nfile to be created. This is called by the framework during generation to provide a suggested default\nfile name (and extension) to the host application&apos;s implementation\nof the output properties provider.\n<p>\nThe provided information allows an application to show a properly initialized \nSave As dialog with a proposed file name and a corresponding file type filter.\n</p>\n"
  remarks: "\n<p>\nThe framework will call this method for each file type component in the order in which the components \nare used during generation. Proposals that occur later are always given precedence.\n</p>\n<p>\nThe implementation does not need to supply a full path for the file when suggesting a filename.\n</p>\n<p>\nThe actual output file info that will be used is provided by the framework\nthrough the <xref href=\"Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties(Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties)\" data-throw-if-not-resolved=\"false\"></xref> call.\n</p>\n"
  syntax:
    content: void GetProposedOutputFileInfo(IPersistentFileConversionProperties fileProperties, IOutputFileInfo proposedFileInfo)
    parameters:
    - id: fileProperties
      type: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
    - id: proposedFileInfo
      type: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
      description: "Current proposal for the file name etc. if suggested by a \npreceding file processor component. The implementation may\nchange the properties of this object to indicate the proposed information."
    content.vb: Sub GetProposedOutputFileInfo(fileProperties As IPersistentFileConversionProperties, proposedFileInfo As IOutputFileInfo)
  overload: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo*
references:
- uid: Sdl.FileTypeSupport.Framework.NativeApi
  commentId: N:Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.NativeApi
  nameWithType: Sdl.FileTypeSupport.Framework.NativeApi
  fullName: Sdl.FileTypeSupport.Framework.NativeApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties
  isExternal: true
  name: SetOutputProperties
  nameWithType: INativeOutputSettingsAware.SetOutputProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.SetOutputProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: INativeOutputFileProperties
  nameWithType: INativeOutputFileProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputFileProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo*
  commentId: Overload:Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo
  isExternal: true
  name: GetProposedOutputFileInfo
  nameWithType: INativeOutputSettingsAware.GetProposedOutputFileInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.INativeOutputSettingsAware.GetProposedOutputFileInfo
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IPersistentFileConversionProperties
  nameWithType: IPersistentFileConversionProperties
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IPersistentFileConversionProperties
- uid: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  commentId: T:Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo
  parent: Sdl.FileTypeSupport.Framework.NativeApi
  isExternal: true
  name: IOutputFileInfo
  nameWithType: IOutputFileInfo
  fullName: Sdl.FileTypeSupport.Framework.NativeApi.IOutputFileInfo

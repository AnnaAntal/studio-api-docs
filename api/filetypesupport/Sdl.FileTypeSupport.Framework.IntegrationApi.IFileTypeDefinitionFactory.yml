### YamlMime:ManagedReference
items:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
  id: IFileTypeDefinitionFactory
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  children:
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.ApplyFileTypeInformation(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromFile(System.String)
  - Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromResource(System.String)
  langs:
  - csharp
  - vb
  name: IFileTypeDefinitionFactory
  nameWithType: IFileTypeDefinitionFactory
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
  type: Interface
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nFactory for file type definitions. This is typically accessed from \n<xref href=\"Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeManager.FileTypeDefinitionFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public interface IFileTypeDefinitionFactory
    content.vb: Public Interface IFileTypeDefinitionFactory
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromFile(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromFile(System.String)
  id: CreateFromFile(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
  langs:
  - csharp
  - vb
  name: CreateFromFile(String)
  nameWithType: IFileTypeDefinitionFactory.CreateFromFile(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromFile(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreate a file type definition from an *.sdlfiletype file, transforming the\nfile content if necessary to support older file type definition files.\n"
  remarks: "\n<p>\nIf the file is in an older format, the content will be adopted after\nit has been read, so that it can be used with this version of the framework\n(if possible).\n</p>\n"
  syntax:
    content: IFileTypeDefinition CreateFromFile(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    content.vb: Function CreateFromFile(filePath As String) As IFileTypeDefinition
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromFile*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromResource(System.String)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromResource(System.String)
  id: CreateFromResource(System.String)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
  langs:
  - csharp
  - vb
  name: CreateFromResource(String)
  nameWithType: IFileTypeDefinitionFactory.CreateFromResource(String)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromResource(System.String)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nCreate a file type definition from the specified path or resource, without adapting the\ncontent to support older file type definitions.\n"
  remarks: "\n<p>\nThe path can be any type of path that is supported by the factory implementation. \nThe default factory implementation supports, for example:\n</p>\n<ul><li></li><li></li><li></li></ul>\n<p>\nNo detection and adaptation of older file type definitions will be attempted when using this factory method.\n</p>\n"
  syntax:
    content: IFileTypeDefinition CreateFromResource(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
    content.vb: Function CreateFromResource(path As String) As IFileTypeDefinition
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromResource*
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.ApplyFileTypeInformation(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  commentId: M:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.ApplyFileTypeInformation(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  id: ApplyFileTypeInformation(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition,Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory
  langs:
  - csharp
  - vb
  name: ApplyFileTypeInformation(IFileTypeDefinition, FileTypeProfile)
  nameWithType: IFileTypeDefinitionFactory.ApplyFileTypeInformation(IFileTypeDefinition, FileTypeProfile)
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.ApplyFileTypeInformation(Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition, Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile)
  type: Method
  source:
    path: Sdl.FileTypeSupport.Framework.Core
    isExternal: true
  assemblies:
  - Sdl.FileTypeSupport.Framework.Core
  namespace: Sdl.FileTypeSupport.Framework.IntegrationApi
  summary: "\nModify all or parts of the file type information in the file type definition by\napplying properties defined in the file type profile.\n"
  syntax:
    content: void ApplyFileTypeInformation(IFileTypeDefinition definition, FileTypeProfile fileTypeProfile)
    parameters:
    - id: definition
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
      description: the file type definition to be modified
    - id: fileTypeProfile
      type: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
      description: the file type profile
    content.vb: Sub ApplyFileTypeInformation(definition As IFileTypeDefinition, fileTypeProfile As FileTypeProfile)
  overload: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.ApplyFileTypeInformation*
references:
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi
  commentId: N:Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: Sdl.FileTypeSupport.Framework.IntegrationApi
  nameWithType: Sdl.FileTypeSupport.Framework.IntegrationApi
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromFile*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromFile
  isExternal: true
  name: CreateFromFile
  nameWithType: IFileTypeDefinitionFactory.CreateFromFile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: IFileTypeDefinition
  nameWithType: IFileTypeDefinition
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinition
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromResource*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromResource
  isExternal: true
  name: CreateFromResource
  nameWithType: IFileTypeDefinitionFactory.CreateFromResource
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.CreateFromResource
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.ApplyFileTypeInformation*
  commentId: Overload:Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.ApplyFileTypeInformation
  isExternal: true
  name: ApplyFileTypeInformation
  nameWithType: IFileTypeDefinitionFactory.ApplyFileTypeInformation
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.IFileTypeDefinitionFactory.ApplyFileTypeInformation
- uid: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  commentId: T:Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile
  parent: Sdl.FileTypeSupport.Framework.IntegrationApi
  isExternal: true
  name: FileTypeProfile
  nameWithType: FileTypeProfile
  fullName: Sdl.FileTypeSupport.Framework.IntegrationApi.FileTypeProfile

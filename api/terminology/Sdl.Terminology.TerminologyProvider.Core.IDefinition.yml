### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.IDefinition
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.IDefinition
  id: IDefinition
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.IDefinition.Fields
  - Sdl.Terminology.TerminologyProvider.Core.IDefinition.Languages
  langs:
  - csharp
  - vb
  name: IDefinition
  nameWithType: IDefinition
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDefinition
  type: Interface
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThe terminology provider definition\n"
  syntax:
    content: public interface IDefinition
    content.vb: Public Interface IDefinition
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Fields
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IDefinition.Fields
  id: Fields
  parent: Sdl.Terminology.TerminologyProvider.Core.IDefinition
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: IDefinition.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Fields
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nList of available fields\n"
  syntax:
    content: IEnumerable<IDescriptiveField> Fields { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField}
    content.vb: ReadOnly Property Fields As IEnumerable(Of IDescriptiveField)
  overload: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Fields*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Languages
  commentId: P:Sdl.Terminology.TerminologyProvider.Core.IDefinition.Languages
  id: Languages
  parent: Sdl.Terminology.TerminologyProvider.Core.IDefinition
  langs:
  - csharp
  - vb
  name: Languages
  nameWithType: IDefinition.Languages
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Languages
  type: Property
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nList of available languages\n"
  syntax:
    content: IEnumerable<IDefinitionLanguage> Languages { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage}
    content.vb: ReadOnly Property Languages As IEnumerable(Of IDefinitionLanguage)
  overload: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Languages*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Fields*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.IDefinition.Fields
  isExternal: true
  name: Fields
  nameWithType: IDefinition.Fields
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Fields
- uid: System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDescriptiveField>
  nameWithType: IEnumerable<IDescriptiveField>
  fullName: System.Collections.Generic.IEnumerable<Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField>
  nameWithType.vb: IEnumerable(Of IDescriptiveField)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField)
  name.vb: IEnumerable(Of IDescriptiveField)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
    name: IDescriptiveField
    nameWithType: IDescriptiveField
    fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
    name: IDescriptiveField
    nameWithType: IDescriptiveField
    fullName: Sdl.Terminology.TerminologyProvider.Core.IDescriptiveField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Languages*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.IDefinition.Languages
  isExternal: true
  name: Languages
  nameWithType: IDefinition.Languages
  fullName: Sdl.Terminology.TerminologyProvider.Core.IDefinition.Languages
- uid: System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage}
  commentId: T:System.Collections.Generic.IEnumerable{Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IDefinitionLanguage>
  nameWithType: IEnumerable<IDefinitionLanguage>
  fullName: System.Collections.Generic.IEnumerable<Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage>
  nameWithType.vb: IEnumerable(Of IDefinitionLanguage)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage)
  name.vb: IEnumerable(Of IDefinitionLanguage)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage
    name: IDefinitionLanguage
    nameWithType: IDefinitionLanguage
    fullName: Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage
    name: IDefinitionLanguage
    nameWithType: IDefinitionLanguage
    fullName: Sdl.Terminology.TerminologyProvider.Core.IDefinitionLanguage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )

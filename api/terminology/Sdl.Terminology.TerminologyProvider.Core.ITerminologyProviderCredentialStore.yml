### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  id: ITerminologyProviderCredentialStore
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddCredential(System.Uri,Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddOrUpdateCredential(System.Uri,Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.Clear
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.GetCredential(System.Uri)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.RemoveCredential(System.Uri)
  langs:
  - csharp
  - vb
  name: ITerminologyProviderCredentialStore
  nameWithType: ITerminologyProviderCredentialStore
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  type: Interface
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThis interface represents a storage mechanism for terminology provider credentials.\n"
  syntax:
    content: public interface ITerminologyProviderCredentialStore
    content.vb: Public Interface ITerminologyProviderCredentialStore
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.GetCredential(System.Uri)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.GetCredential(System.Uri)
  id: GetCredential(System.Uri)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  langs:
  - csharp
  - vb
  name: GetCredential(Uri)
  nameWithType: ITerminologyProviderCredentialStore.GetCredential(Uri)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.GetCredential(System.Uri)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nGets a credential for the given URI.\n"
  syntax:
    content: TerminologyProviderCredential GetCredential(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: "The URI for which to retrieve the credential. Note that this does not necessarily have to be \nthe terminology provider URI itself. It can be a more general URI, for instance identifying the server on which the terminology provider lives.\nThis allows for reusing credentials for different terminology providers hosted on the same server."
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
      description: A serialized credential; or null if no credential for the given URI is available.
    content.vb: Function GetCredential(uri As Uri) As TerminologyProviderCredential
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.GetCredential*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddCredential(System.Uri,Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddCredential(System.Uri,Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  id: AddCredential(System.Uri,Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  langs:
  - csharp
  - vb
  name: AddCredential(Uri, TerminologyProviderCredential)
  nameWithType: ITerminologyProviderCredentialStore.AddCredential(Uri, TerminologyProviderCredential)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddCredential(System.Uri, Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nAdds or updates the credential for the specified URI.\n"
  syntax:
    content: void AddCredential(Uri uri, TerminologyProviderCredential credential)
    parameters:
    - id: uri
      type: System.Uri
      description: "The URI for which to add or update the credential. Note that this does not necessarily have to be \nthe terminology provider URI itself. It can be a more general URI, for instance identifying the server on which the terminology provider lives.\nThis allows for reusing credentials for different terminology providers hosted on the same server."
    - id: credential
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
      description: A serialized credential.
    content.vb: Sub AddCredential(uri As Uri, credential As TerminologyProviderCredential)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddCredential*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddOrUpdateCredential(System.Uri,Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddOrUpdateCredential(System.Uri,Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  id: AddOrUpdateCredential(System.Uri,Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  langs:
  - csharp
  - vb
  name: AddOrUpdateCredential(Uri, TerminologyProviderCredential)
  nameWithType: ITerminologyProviderCredentialStore.AddOrUpdateCredential(Uri, TerminologyProviderCredential)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddOrUpdateCredential(System.Uri, Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nAdd a credential for the specified provider Uri. If it does not exists, otherwise update the existing credential\n"
  syntax:
    content: void AddOrUpdateCredential(Uri uri, TerminologyProviderCredential credential)
    parameters:
    - id: uri
      type: System.Uri
      description: The provider Uri
    - id: credential
      type: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
      description: the credential to add or update an existing one
    content.vb: Sub AddOrUpdateCredential(uri As Uri, credential As TerminologyProviderCredential)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddOrUpdateCredential*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.RemoveCredential(System.Uri)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.RemoveCredential(System.Uri)
  id: RemoveCredential(System.Uri)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  langs:
  - csharp
  - vb
  name: RemoveCredential(Uri)
  nameWithType: ITerminologyProviderCredentialStore.RemoveCredential(Uri)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.RemoveCredential(System.Uri)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nRemoves the credential for the specified URI.\n"
  syntax:
    content: void RemoveCredential(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: "The URI for which to remove the credential. Note that this does not necessarily have to be \nthe terminology provider URI itself. It can be a more general URI, for instance identifying the server on which the terminology provider lives.\nThis allows for reusing credentials for different terminology providers hosted on the same server."
    content.vb: Sub RemoveCredential(uri As Uri)
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.RemoveCredential*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.Clear
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.Clear
  id: Clear
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ITerminologyProviderCredentialStore.Clear()
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.Clear()
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nRemoves all credentials stored in this store.\n"
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.Clear*
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.GetCredential*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.GetCredential
  isExternal: true
  name: GetCredential
  nameWithType: ITerminologyProviderCredentialStore.GetCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.GetCredential
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: TerminologyProviderCredential
  nameWithType: TerminologyProviderCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderCredential
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddCredential*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddCredential
  isExternal: true
  name: AddCredential
  nameWithType: ITerminologyProviderCredentialStore.AddCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddCredential
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddOrUpdateCredential*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddOrUpdateCredential
  isExternal: true
  name: AddOrUpdateCredential
  nameWithType: ITerminologyProviderCredentialStore.AddOrUpdateCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.AddOrUpdateCredential
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.RemoveCredential*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.RemoveCredential
  isExternal: true
  name: RemoveCredential
  nameWithType: ITerminologyProviderCredentialStore.RemoveCredential
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.RemoveCredential
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.Clear*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.Clear
  isExternal: true
  name: Clear
  nameWithType: ITerminologyProviderCredentialStore.Clear
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore.Clear

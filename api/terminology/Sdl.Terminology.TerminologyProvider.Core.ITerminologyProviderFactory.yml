### YamlMime:ManagedReference
items:
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory
  id: ITerminologyProviderFactory
  parent: Sdl.Terminology.TerminologyProvider.Core
  children:
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider(System.Uri,Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore)
  - Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.SupportsTerminologyProviderUri(System.Uri)
  langs:
  - csharp
  - vb
  name: ITerminologyProviderFactory
  nameWithType: ITerminologyProviderFactory
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory
  type: Interface
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nThis interface defines a Terminology Provider Factory class that can be used as a plug-in based \non the Sdl.Core.PluginFramework Extensions API\n"
  remarks: "\n<p>Implementations of this class should be marked up with a <xref href=\"Sdl.Terminology.TerminologyProvider.Core.TerminologyProviderFactoryAttribute\" data-throw-if-not-resolved=\"false\"></xref>\nextension attribute in order for the factory to be available.</p>\n"
  syntax:
    content: public interface ITerminologyProviderFactory
    content.vb: Public Interface ITerminologyProviderFactory
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.SupportsTerminologyProviderUri(System.Uri)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.SupportsTerminologyProviderUri(System.Uri)
  id: SupportsTerminologyProviderUri(System.Uri)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory
  langs:
  - csharp
  - vb
  name: SupportsTerminologyProviderUri(Uri)
  nameWithType: ITerminologyProviderFactory.SupportsTerminologyProviderUri(Uri)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.SupportsTerminologyProviderUri(System.Uri)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nReturns true if this factory supports the specified URI.\n"
  syntax:
    content: bool SupportsTerminologyProviderUri(Uri terminologyProviderUri)
    parameters:
    - id: terminologyProviderUri
      type: System.Uri
      description: The Uri.
    return:
      type: System.Boolean
      description: True if this factory supports the specified URI.
    content.vb: Function SupportsTerminologyProviderUri(terminologyProviderUri As Uri) As Boolean
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.SupportsTerminologyProviderUri*
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider(System.Uri,Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore)
  commentId: M:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider(System.Uri,Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore)
  id: CreateTerminologyProvider(System.Uri,Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore)
  parent: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory
  langs:
  - csharp
  - vb
  name: CreateTerminologyProvider(Uri, ITerminologyProviderCredentialStore)
  nameWithType: ITerminologyProviderFactory.CreateTerminologyProvider(Uri, ITerminologyProviderCredentialStore)
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider(System.Uri, Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore)
  type: Method
  source:
    path: Sdl.Terminology.TerminologyProvider.Core
    isExternal: true
  assemblies:
  - Sdl.Terminology.TerminologyProvider.Core
  namespace: Sdl.Terminology.TerminologyProvider.Core
  summary: "\nCreates an instance of the terminology provider defined by the specified URI.\n"
  syntax:
    content: ITerminologyProvider CreateTerminologyProvider(Uri terminologyProviderUri, ITerminologyProviderCredentialStore credentials)
    parameters:
    - id: terminologyProviderUri
      type: System.Uri
      description: A URI that identifies the translation provider to create.
    - id: credentials
      type: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
      description: "A credential store object that can be used to retrieve credentials \nrequired for this terminology provider. "
    return:
      type: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
      description: A new terminology provider object, ready to be used.
    content.vb: Function CreateTerminologyProvider(terminologyProviderUri As Uri, credentials As ITerminologyProviderCredentialStore) As ITerminologyProvider
  overload: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Thrown if <code data-dev-comment-type=\"paramref\" class=\"paramref\">terminologyProviderUri</code> or <code data-dev-comment-type=\"paramref\" class=\"paramref\">credentials</code> \nis null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code data-dev-comment-type="paramref" class="paramref">terminologyProviderUri</code> is not supported by this factory.
references:
- uid: Sdl.Terminology.TerminologyProvider.Core
  commentId: N:Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: Sdl.Terminology.TerminologyProvider.Core
  nameWithType: Sdl.Terminology.TerminologyProvider.Core
  fullName: Sdl.Terminology.TerminologyProvider.Core
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.SupportsTerminologyProviderUri*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.SupportsTerminologyProviderUri
  isExternal: true
  name: SupportsTerminologyProviderUri
  nameWithType: ITerminologyProviderFactory.SupportsTerminologyProviderUri
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.SupportsTerminologyProviderUri
- uid: System.Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider*
  commentId: Overload:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider
  isExternal: true
  name: CreateTerminologyProvider
  nameWithType: ITerminologyProviderFactory.CreateTerminologyProvider
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderFactory.CreateTerminologyProvider
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  parent: System
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: ITerminologyProviderCredentialStore
  nameWithType: ITerminologyProviderCredentialStore
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProviderCredentialStore
- uid: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  commentId: T:Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider
  parent: Sdl.Terminology.TerminologyProvider.Core
  isExternal: true
  name: ITerminologyProvider
  nameWithType: ITerminologyProvider
  fullName: Sdl.Terminology.TerminologyProvider.Core.ITerminologyProvider

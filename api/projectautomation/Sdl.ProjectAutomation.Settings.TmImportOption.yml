### YamlMime:ManagedReference
items:
- uid: Sdl.ProjectAutomation.Settings.TmImportOption
  commentId: T:Sdl.ProjectAutomation.Settings.TmImportOption
  id: TmImportOption
  parent: Sdl.ProjectAutomation.Settings
  children:
  - Sdl.ProjectAutomation.Settings.TmImportOption.AlwaysAddNewTranslation
  - Sdl.ProjectAutomation.Settings.TmImportOption.KeepMostRecentTranslation
  - Sdl.ProjectAutomation.Settings.TmImportOption.LeaveUnchangedTranslation
  - Sdl.ProjectAutomation.Settings.TmImportOption.MergeTranslation
  - Sdl.ProjectAutomation.Settings.TmImportOption.OverwriteExistingTranslation
  langs:
  - csharp
  - vb
  name: TmImportOption
  nameWithType: TmImportOption
  fullName: Sdl.ProjectAutomation.Settings.TmImportOption
  type: Enum
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nOptions to specify how the TU should be handled when the same TU already exists in the TM\n"
  syntax:
    content: public enum TmImportOption
    content.vb: Public Enum TmImportOption
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Sdl.ProjectAutomation.Settings.TmImportOption.AlwaysAddNewTranslation
  commentId: F:Sdl.ProjectAutomation.Settings.TmImportOption.AlwaysAddNewTranslation
  id: AlwaysAddNewTranslation
  parent: Sdl.ProjectAutomation.Settings.TmImportOption
  langs:
  - csharp
  - vb
  name: AlwaysAddNewTranslation
  nameWithType: TmImportOption.AlwaysAddNewTranslation
  fullName: Sdl.ProjectAutomation.Settings.TmImportOption.AlwaysAddNewTranslation
  type: Field
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nTU are always added as new TUs.\n"
  syntax:
    content: AlwaysAddNewTranslation = 0
    return:
      type: Sdl.ProjectAutomation.Settings.TmImportOption
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.ProjectAutomation.Settings.TmImportOption.OverwriteExistingTranslation
  commentId: F:Sdl.ProjectAutomation.Settings.TmImportOption.OverwriteExistingTranslation
  id: OverwriteExistingTranslation
  parent: Sdl.ProjectAutomation.Settings.TmImportOption
  langs:
  - csharp
  - vb
  name: OverwriteExistingTranslation
  nameWithType: TmImportOption.OverwriteExistingTranslation
  fullName: Sdl.ProjectAutomation.Settings.TmImportOption.OverwriteExistingTranslation
  type: Field
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nExisting translations should be overwritten or not.\n"
  syntax:
    content: OverwriteExistingTranslation = 1
    return:
      type: Sdl.ProjectAutomation.Settings.TmImportOption
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.ProjectAutomation.Settings.TmImportOption.LeaveUnchangedTranslation
  commentId: F:Sdl.ProjectAutomation.Settings.TmImportOption.LeaveUnchangedTranslation
  id: LeaveUnchangedTranslation
  parent: Sdl.ProjectAutomation.Settings.TmImportOption
  langs:
  - csharp
  - vb
  name: LeaveUnchangedTranslation
  nameWithType: TmImportOption.LeaveUnchangedTranslation
  fullName: Sdl.ProjectAutomation.Settings.TmImportOption.LeaveUnchangedTranslation
  type: Field
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nIf true do not import TU&apos;s even if target TU&apos;s differ.\n"
  syntax:
    content: LeaveUnchangedTranslation = 2
    return:
      type: Sdl.ProjectAutomation.Settings.TmImportOption
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.ProjectAutomation.Settings.TmImportOption.KeepMostRecentTranslation
  commentId: F:Sdl.ProjectAutomation.Settings.TmImportOption.KeepMostRecentTranslation
  id: KeepMostRecentTranslation
  parent: Sdl.ProjectAutomation.Settings.TmImportOption
  langs:
  - csharp
  - vb
  name: KeepMostRecentTranslation
  nameWithType: TmImportOption.KeepMostRecentTranslation
  fullName: Sdl.ProjectAutomation.Settings.TmImportOption.KeepMostRecentTranslation
  type: Field
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nAlways keep the most recent TU (based on TU change date).\n"
  syntax:
    content: KeepMostRecentTranslation = 3
    return:
      type: Sdl.ProjectAutomation.Settings.TmImportOption
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Sdl.ProjectAutomation.Settings.TmImportOption.MergeTranslation
  commentId: F:Sdl.ProjectAutomation.Settings.TmImportOption.MergeTranslation
  id: MergeTranslation
  parent: Sdl.ProjectAutomation.Settings.TmImportOption
  langs:
  - csharp
  - vb
  name: MergeTranslation
  nameWithType: TmImportOption.MergeTranslation
  fullName: Sdl.ProjectAutomation.Settings.TmImportOption.MergeTranslation
  type: Field
  source:
    path: Sdl.ProjectAutomation.Settings
    isExternal: true
  assemblies:
  - Sdl.ProjectAutomation.Settings
  namespace: Sdl.ProjectAutomation.Settings
  summary: "\nMerges with the previous version of the translation or adds a new translation if no previous version.\n"
  syntax:
    content: MergeTranslation = 4
    return:
      type: Sdl.ProjectAutomation.Settings.TmImportOption
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Sdl.ProjectAutomation.Settings
  commentId: N:Sdl.ProjectAutomation.Settings
  isExternal: true
  name: Sdl.ProjectAutomation.Settings
  nameWithType: Sdl.ProjectAutomation.Settings
  fullName: Sdl.ProjectAutomation.Settings
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.ProjectAutomation.Settings.TmImportOption
  commentId: T:Sdl.ProjectAutomation.Settings.TmImportOption
  parent: Sdl.ProjectAutomation.Settings
  isExternal: true
  name: TmImportOption
  nameWithType: TmImportOption
  fullName: Sdl.ProjectAutomation.Settings.TmImportOption

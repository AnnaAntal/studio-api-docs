### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs
  commentId: T:Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs
  id: InitializePluginCompletedEventArgs
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.#ctor(Sdl.Core.PluginFramework.IPlugin,System.Exception,System.Boolean)
  - Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.Plugin
  langs:
  - csharp
  - vb
  name: InitializePluginCompletedEventArgs
  nameWithType: InitializePluginCompletedEventArgs
  fullName: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs
  type: Class
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nEvents argument class for plug-in initialization completion events (<xref href=\"Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginCompleted\" data-throw-if-not-resolved=\"false\"></xref>), \nraised during calls to <xref href=\"Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync(System.Collections.Generic.IEnumerable%7bSdl.Core.PluginFramework.IPlugin%7d)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public class InitializePluginCompletedEventArgs : AsyncCompletedEventArgs'
    content.vb: >-
      Public Class InitializePluginCompletedEventArgs

          Inherits AsyncCompletedEventArgs
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.#ctor(Sdl.Core.PluginFramework.IPlugin,System.Exception,System.Boolean)
  commentId: M:Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.#ctor(Sdl.Core.PluginFramework.IPlugin,System.Exception,System.Boolean)
  id: '#ctor(Sdl.Core.PluginFramework.IPlugin,System.Exception,System.Boolean)'
  parent: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs
  langs:
  - csharp
  - vb
  name: InitializePluginCompletedEventArgs(IPlugin, Exception, Boolean)
  nameWithType: InitializePluginCompletedEventArgs.InitializePluginCompletedEventArgs(IPlugin, Exception, Boolean)
  fullName: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.InitializePluginCompletedEventArgs(Sdl.Core.PluginFramework.IPlugin, System.Exception, System.Boolean)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nConstructor.\n"
  syntax:
    content: public InitializePluginCompletedEventArgs(IPlugin plugin, Exception exception, bool canceled)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
      description: The plug-in for which initialization was attempted.
    - id: exception
      type: System.Exception
      description: If initialization failed, the exception that occurred during initialization.
    - id: canceled
      type: System.Boolean
      description: true if initialization was canelled.
    content.vb: Public Sub New(plugin As IPlugin, exception As Exception, canceled As Boolean)
  overload: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.Plugin
  commentId: P:Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.Plugin
  id: Plugin
  parent: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs
  langs:
  - csharp
  - vb
  name: Plugin
  nameWithType: InitializePluginCompletedEventArgs.Plugin
  fullName: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.Plugin
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nGets the plug-in for which initialization was attempted.\n"
  syntax:
    content: public IPlugin Plugin { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.IPlugin
    content.vb: Public ReadOnly Property Plugin As IPlugin
  overload: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.Plugin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.#ctor
  isExternal: true
  name: InitializePluginCompletedEventArgs
  nameWithType: InitializePluginCompletedEventArgs.InitializePluginCompletedEventArgs
  fullName: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.InitializePluginCompletedEventArgs
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.Plugin*
  commentId: Overload:Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.Plugin
  isExternal: true
  name: Plugin
  nameWithType: InitializePluginCompletedEventArgs.Plugin
  fullName: Sdl.Core.PluginFramework.InitializePluginCompletedEventArgs.Plugin

### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.Integration.IExtensionBuilder
  commentId: T:Sdl.Core.PluginFramework.Integration.IExtensionBuilder
  id: IExtensionBuilder
  parent: Sdl.Core.PluginFramework.Integration
  children:
  - Sdl.Core.PluginFramework.Integration.IExtensionBuilder.Build(Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments)
  langs:
  - csharp
  - vb
  name: IExtensionBuilder
  nameWithType: IExtensionBuilder
  fullName: Sdl.Core.PluginFramework.Integration.IExtensionBuilder
  type: Interface
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: "\nImplements a custom extension instance builder\n"
  syntax:
    content: public interface IExtensionBuilder
    content.vb: Public Interface IExtensionBuilder
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.PluginFramework.Integration.IExtensionBuilder.Build(Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments)
  commentId: M:Sdl.Core.PluginFramework.Integration.IExtensionBuilder.Build(Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments)
  id: Build(Sdl.Core.PluginFramework.IExtension,System.Object,Sdl.Core.PluginFramework.Integration.ExtensionArguments)
  parent: Sdl.Core.PluginFramework.Integration.IExtensionBuilder
  langs:
  - csharp
  - vb
  name: Build(IExtension, Object, ExtensionArguments)
  nameWithType: IExtensionBuilder.Build(IExtension, Object, ExtensionArguments)
  fullName: Sdl.Core.PluginFramework.Integration.IExtensionBuilder.Build(Sdl.Core.PluginFramework.IExtension, System.Object, Sdl.Core.PluginFramework.Integration.ExtensionArguments)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Integration
  summary: "\nBuilds the custom extension instance\n"
  syntax:
    content: object Build(IExtension extension, object defaultInstance, ExtensionArguments arguments)
    parameters:
    - id: extension
      type: Sdl.Core.PluginFramework.IExtension
      description: The extension to be created.
    - id: defaultInstance
      type: System.Object
      description: The default instance of the extension
    - id: arguments
      type: Sdl.Core.PluginFramework.Integration.ExtensionArguments
      description: Optional arguments for the extension builder
    return:
      type: System.Object
      description: The custom extension instance created.
    content.vb: Function Build(extension As IExtension, defaultInstance As Object, arguments As ExtensionArguments) As Object
  overload: Sdl.Core.PluginFramework.Integration.IExtensionBuilder.Build*
references:
- uid: Sdl.Core.PluginFramework.Integration
  commentId: N:Sdl.Core.PluginFramework.Integration
  isExternal: true
  name: Sdl.Core.PluginFramework.Integration
  nameWithType: Sdl.Core.PluginFramework.Integration
  fullName: Sdl.Core.PluginFramework.Integration
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Core.PluginFramework.Integration.IExtensionBuilder.Build*
  commentId: Overload:Sdl.Core.PluginFramework.Integration.IExtensionBuilder.Build
  isExternal: true
  name: Build
  nameWithType: IExtensionBuilder.Build
  fullName: Sdl.Core.PluginFramework.Integration.IExtensionBuilder.Build
- uid: Sdl.Core.PluginFramework.IExtension
  commentId: T:Sdl.Core.PluginFramework.IExtension
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IExtension
  nameWithType: IExtension
  fullName: Sdl.Core.PluginFramework.IExtension
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sdl.Core.PluginFramework.Integration.ExtensionArguments
  commentId: T:Sdl.Core.PluginFramework.Integration.ExtensionArguments
  parent: Sdl.Core.PluginFramework.Integration
  isExternal: true
  name: ExtensionArguments
  nameWithType: ExtensionArguments
  fullName: Sdl.Core.PluginFramework.Integration.ExtensionArguments
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System

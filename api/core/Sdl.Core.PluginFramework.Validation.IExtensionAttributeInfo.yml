### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
  commentId: T:Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
  id: IExtensionAttributeInfo
  parent: Sdl.Core.PluginFramework.Validation
  children:
  - Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.AuxiliaryExtensionAttributes
  - Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionAttribute
  - Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionType
  langs:
  - csharp
  - vb
  name: IExtensionAttributeInfo
  nameWithType: IExtensionAttributeInfo
  fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
  type: Interface
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Validation
  summary: "\nProvides information about an extension type, which is marked with an extension attribute and \na number of auxiliary extension attributes.\n"
  syntax:
    content: public interface IExtensionAttributeInfo
    content.vb: Public Interface IExtensionAttributeInfo
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionType
  commentId: P:Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionType
  id: ExtensionType
  parent: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
  langs:
  - csharp
  - vb
  name: ExtensionType
  nameWithType: IExtensionAttributeInfo.ExtensionType
  fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionType
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Validation
  summary: "\nGets the type of the extension.\n"
  syntax:
    content: Type ExtensionType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property ExtensionType As Type
  overload: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionAttribute
  commentId: P:Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionAttribute
  id: ExtensionAttribute
  parent: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
  langs:
  - csharp
  - vb
  name: ExtensionAttribute
  nameWithType: IExtensionAttributeInfo.ExtensionAttribute
  fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionAttribute
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Validation
  summary: "\nGets the extension attribute with which the extension type is marked.\n"
  syntax:
    content: ExtensionAttribute ExtensionAttribute { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.ExtensionAttribute
    content.vb: ReadOnly Property ExtensionAttribute As ExtensionAttribute
  overload: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionAttribute*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.AuxiliaryExtensionAttributes
  commentId: P:Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.AuxiliaryExtensionAttributes
  id: AuxiliaryExtensionAttributes
  parent: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo
  langs:
  - csharp
  - vb
  name: AuxiliaryExtensionAttributes
  nameWithType: IExtensionAttributeInfo.AuxiliaryExtensionAttributes
  fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.AuxiliaryExtensionAttributes
  type: Property
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework.Validation
  summary: "\nGets the auiliary extension attributes with which the extension type is marked.\n"
  syntax:
    content: AuxiliaryExtensionAttribute[] AuxiliaryExtensionAttributes { get; }
    parameters: []
    return:
      type: Sdl.Core.PluginFramework.AuxiliaryExtensionAttribute[]
    content.vb: ReadOnly Property AuxiliaryExtensionAttributes As AuxiliaryExtensionAttribute()
  overload: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.AuxiliaryExtensionAttributes*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.Core.PluginFramework.Validation
  commentId: N:Sdl.Core.PluginFramework.Validation
  isExternal: true
  name: Sdl.Core.PluginFramework.Validation
  nameWithType: Sdl.Core.PluginFramework.Validation
  fullName: Sdl.Core.PluginFramework.Validation
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionType*
  commentId: Overload:Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionType
  isExternal: true
  name: ExtensionType
  nameWithType: IExtensionAttributeInfo.ExtensionType
  fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionAttribute*
  commentId: Overload:Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionAttribute
  isExternal: true
  name: ExtensionAttribute
  nameWithType: IExtensionAttributeInfo.ExtensionAttribute
  fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.ExtensionAttribute
- uid: Sdl.Core.PluginFramework.ExtensionAttribute
  commentId: T:Sdl.Core.PluginFramework.ExtensionAttribute
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: ExtensionAttribute
  nameWithType: ExtensionAttribute
  fullName: Sdl.Core.PluginFramework.ExtensionAttribute
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.AuxiliaryExtensionAttributes*
  commentId: Overload:Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.AuxiliaryExtensionAttributes
  isExternal: true
  name: AuxiliaryExtensionAttributes
  nameWithType: IExtensionAttributeInfo.AuxiliaryExtensionAttributes
  fullName: Sdl.Core.PluginFramework.Validation.IExtensionAttributeInfo.AuxiliaryExtensionAttributes
- uid: Sdl.Core.PluginFramework.AuxiliaryExtensionAttribute[]
  isExternal: true
  name: AuxiliaryExtensionAttribute[]
  nameWithType: AuxiliaryExtensionAttribute[]
  fullName: Sdl.Core.PluginFramework.AuxiliaryExtensionAttribute[]
  nameWithType.vb: AuxiliaryExtensionAttribute()
  fullName.vb: Sdl.Core.PluginFramework.AuxiliaryExtensionAttribute()
  name.vb: AuxiliaryExtensionAttribute()
  spec.csharp:
  - uid: Sdl.Core.PluginFramework.AuxiliaryExtensionAttribute
    name: AuxiliaryExtensionAttribute
    nameWithType: AuxiliaryExtensionAttribute
    fullName: Sdl.Core.PluginFramework.AuxiliaryExtensionAttribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Sdl.Core.PluginFramework.AuxiliaryExtensionAttribute
    name: AuxiliaryExtensionAttribute
    nameWithType: AuxiliaryExtensionAttribute
    fullName: Sdl.Core.PluginFramework.AuxiliaryExtensionAttribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()

### YamlMime:ManagedReference
items:
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback
  commentId: T:Sdl.Core.PluginFramework.PluginInitializedCallback
  id: PluginInitializedCallback
  parent: Sdl.Core.PluginFramework
  children:
  - Sdl.Core.PluginFramework.PluginInitializedCallback.#ctor(System.Object,System.IntPtr)
  - Sdl.Core.PluginFramework.PluginInitializedCallback.BeginInvoke(Sdl.Core.PluginFramework.IPlugin,System.Exception,System.AsyncCallback,System.Object)
  - Sdl.Core.PluginFramework.PluginInitializedCallback.EndInvoke(System.IAsyncResult)
  - Sdl.Core.PluginFramework.PluginInitializedCallback.Invoke(Sdl.Core.PluginFramework.IPlugin,System.Exception)
  langs:
  - csharp
  - vb
  name: PluginInitializedCallback
  nameWithType: PluginInitializedCallback
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback
  type: Delegate
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  summary: "\nCallback delegate for the <xref href=\"Sdl.Core.PluginFramework.IPluginInitializer.InitializePluginAsync(System.Collections.Generic.IEnumerable%7bSdl.Core.PluginFramework.IPlugin%7d)\" data-throw-if-not-resolved=\"false\"></xref> call.\n"
  syntax:
    content: public delegate void PluginInitializedCallback(IPlugin plugin, Exception error);
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
      description: The plug-in for which initialization was attempted.
    - id: error
      type: System.Exception
      description: If initialization failed, the exception that occurred during initialization.
    content.vb: Public Delegate Sub PluginInitializedCallback(plugin As IPlugin, error As Exception)
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback.#ctor(System.Object,System.IntPtr)
  commentId: M:Sdl.Core.PluginFramework.PluginInitializedCallback.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: Sdl.Core.PluginFramework.PluginInitializedCallback
  langs:
  - csharp
  - vb
  name: PluginInitializedCallback(Object, IntPtr)
  nameWithType: PluginInitializedCallback.PluginInitializedCallback(Object, IntPtr)
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback.PluginInitializedCallback(System.Object, System.IntPtr)
  type: Constructor
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public PluginInitializedCallback(object object, IntPtr method)
    parameters:
    - id: object
      type: System.Object
    - id: method
      type: System.IntPtr
    content.vb: Public Sub New(object As Object, method As IntPtr)
  overload: Sdl.Core.PluginFramework.PluginInitializedCallback.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback.Invoke(Sdl.Core.PluginFramework.IPlugin,System.Exception)
  commentId: M:Sdl.Core.PluginFramework.PluginInitializedCallback.Invoke(Sdl.Core.PluginFramework.IPlugin,System.Exception)
  id: Invoke(Sdl.Core.PluginFramework.IPlugin,System.Exception)
  parent: Sdl.Core.PluginFramework.PluginInitializedCallback
  langs:
  - csharp
  - vb
  name: Invoke(IPlugin, Exception)
  nameWithType: PluginInitializedCallback.Invoke(IPlugin, Exception)
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback.Invoke(Sdl.Core.PluginFramework.IPlugin, System.Exception)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public virtual void Invoke(IPlugin plugin, Exception error)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
    - id: error
      type: System.Exception
    content.vb: Public Overridable Sub Invoke(plugin As IPlugin, error As Exception)
  overload: Sdl.Core.PluginFramework.PluginInitializedCallback.Invoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback.BeginInvoke(Sdl.Core.PluginFramework.IPlugin,System.Exception,System.AsyncCallback,System.Object)
  commentId: M:Sdl.Core.PluginFramework.PluginInitializedCallback.BeginInvoke(Sdl.Core.PluginFramework.IPlugin,System.Exception,System.AsyncCallback,System.Object)
  id: BeginInvoke(Sdl.Core.PluginFramework.IPlugin,System.Exception,System.AsyncCallback,System.Object)
  parent: Sdl.Core.PluginFramework.PluginInitializedCallback
  langs:
  - csharp
  - vb
  name: BeginInvoke(IPlugin, Exception, AsyncCallback, Object)
  nameWithType: PluginInitializedCallback.BeginInvoke(IPlugin, Exception, AsyncCallback, Object)
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback.BeginInvoke(Sdl.Core.PluginFramework.IPlugin, System.Exception, System.AsyncCallback, System.Object)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public virtual IAsyncResult BeginInvoke(IPlugin plugin, Exception error, AsyncCallback callback, object object)
    parameters:
    - id: plugin
      type: Sdl.Core.PluginFramework.IPlugin
    - id: error
      type: System.Exception
    - id: callback
      type: System.AsyncCallback
    - id: object
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Overridable Function BeginInvoke(plugin As IPlugin, error As Exception, callback As AsyncCallback, object As Object) As IAsyncResult
  overload: Sdl.Core.PluginFramework.PluginInitializedCallback.BeginInvoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback.EndInvoke(System.IAsyncResult)
  commentId: M:Sdl.Core.PluginFramework.PluginInitializedCallback.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: Sdl.Core.PluginFramework.PluginInitializedCallback
  langs:
  - csharp
  - vb
  name: EndInvoke(IAsyncResult)
  nameWithType: PluginInitializedCallback.EndInvoke(IAsyncResult)
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback.EndInvoke(System.IAsyncResult)
  type: Method
  source:
    path: Sdl.Core.PluginFramework
    isExternal: true
  assemblies:
  - Sdl.Core.PluginFramework
  namespace: Sdl.Core.PluginFramework
  syntax:
    content: public virtual void EndInvoke(IAsyncResult result)
    parameters:
    - id: result
      type: System.IAsyncResult
    content.vb: Public Overridable Sub EndInvoke(result As IAsyncResult)
  overload: Sdl.Core.PluginFramework.PluginInitializedCallback.EndInvoke*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Sdl.Core.PluginFramework
  commentId: N:Sdl.Core.PluginFramework
  isExternal: true
  name: Sdl.Core.PluginFramework
  nameWithType: Sdl.Core.PluginFramework
  fullName: Sdl.Core.PluginFramework
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Core.PluginFramework.IPlugin
  commentId: T:Sdl.Core.PluginFramework.IPlugin
  parent: Sdl.Core.PluginFramework
  isExternal: true
  name: IPlugin
  nameWithType: IPlugin
  fullName: Sdl.Core.PluginFramework.IPlugin
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback.#ctor*
  commentId: Overload:Sdl.Core.PluginFramework.PluginInitializedCallback.#ctor
  isExternal: true
  name: PluginInitializedCallback
  nameWithType: PluginInitializedCallback.PluginInitializedCallback
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback.PluginInitializedCallback
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback.Invoke*
  commentId: Overload:Sdl.Core.PluginFramework.PluginInitializedCallback.Invoke
  isExternal: true
  name: Invoke
  nameWithType: PluginInitializedCallback.Invoke
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback.Invoke
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback.BeginInvoke*
  commentId: Overload:Sdl.Core.PluginFramework.PluginInitializedCallback.BeginInvoke
  isExternal: true
  name: BeginInvoke
  nameWithType: PluginInitializedCallback.BeginInvoke
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback.BeginInvoke
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Sdl.Core.PluginFramework.PluginInitializedCallback.EndInvoke*
  commentId: Overload:Sdl.Core.PluginFramework.PluginInitializedCallback.EndInvoke
  isExternal: true
  name: EndInvoke
  nameWithType: PluginInitializedCallback.EndInvoke
  fullName: Sdl.Core.PluginFramework.PluginInitializedCallback.EndInvoke

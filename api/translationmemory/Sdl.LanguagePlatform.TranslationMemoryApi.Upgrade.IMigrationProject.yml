### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject
  id: IMigrationProject
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.InputTranslationMemories
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.OutputTranslationMemories
  - Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  langs:
  - csharp
  - vb
  name: IMigrationProject
  nameWithType: IMigrationProject
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nA  migration project encapsulates functionality to migrate one or more legacy translation memories to one or more\nnew translation memories. Use this object as follows:\n\n"
  syntax:
    content: public interface IMigrationProject
    content.vb: Public Interface IMigrationProject
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  id: ProcessAll(System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject
  langs:
  - csharp
  - vb
  name: ProcessAll(EventHandler<ProgressEventArgs>)
  nameWithType: IMigrationProject.ProcessAll(EventHandler<ProgressEventArgs>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll(System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nPerforms the full migration process by exporting all input translation memories and subsequently creating all\noutput translation memories.\n"
  remarks: This method can be called multiple times and will pick up the migration where it failed or was cancelled previously.
  syntax:
    content: void ProcessAll(EventHandler<ProgressEventArgs> progressEventHandler)
    parameters:
    - id: progressEventHandler
      type: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs}
      description: An event handler through which to report progress events and through which the migration process can be cancelled.
    content.vb: Sub ProcessAll(progressEventHandler As EventHandler(Of ProgressEventArgs))
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll*
  nameWithType.vb: IMigrationProject.ProcessAll(EventHandler(Of ProgressEventArgs))
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll(System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs))
  name.vb: ProcessAll(EventHandler(Of ProgressEventArgs))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.InputTranslationMemories
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.InputTranslationMemories
  id: InputTranslationMemories
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject
  langs:
  - csharp
  - vb
  name: InputTranslationMemories
  nameWithType: IMigrationProject.InputTranslationMemories
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.InputTranslationMemories
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nThe collection of input legacy translation memories.\n"
  syntax:
    content: IInputTranslationMemoryCollection InputTranslationMemories { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemoryCollection
    content.vb: ReadOnly Property InputTranslationMemories As IInputTranslationMemoryCollection
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.InputTranslationMemories*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.OutputTranslationMemories
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.OutputTranslationMemories
  id: OutputTranslationMemories
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject
  langs:
  - csharp
  - vb
  name: OutputTranslationMemories
  nameWithType: IMigrationProject.OutputTranslationMemories
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.OutputTranslationMemories
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  summary: "\nThe collection of output translation memories. A new translation memory will be created for every item in this collection.\n"
  syntax:
    content: IOutputTranslationMemoryCollection OutputTranslationMemories { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemoryCollection
    content.vb: ReadOnly Property OutputTranslationMemories As IOutputTranslationMemoryCollection
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.OutputTranslationMemories*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll
  isExternal: true
  name: ProcessAll
  nameWithType: IMigrationProject.ProcessAll
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.ProcessAll
- uid: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs}
  commentId: T:System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProgressEventArgs>
  nameWithType: EventHandler<ProgressEventArgs>
  fullName: System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs>
  nameWithType.vb: EventHandler(Of ProgressEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs)
  name.vb: EventHandler(Of ProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs
    name: ProgressEventArgs
    nameWithType: ProgressEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.ProgressEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.InputTranslationMemories*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.InputTranslationMemories
  isExternal: true
  name: InputTranslationMemories
  nameWithType: IMigrationProject.InputTranslationMemories
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.InputTranslationMemories
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemoryCollection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemoryCollection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: IInputTranslationMemoryCollection
  nameWithType: IInputTranslationMemoryCollection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IInputTranslationMemoryCollection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.OutputTranslationMemories*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.OutputTranslationMemories
  isExternal: true
  name: OutputTranslationMemories
  nameWithType: IMigrationProject.OutputTranslationMemories
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IMigrationProject.OutputTranslationMemories
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemoryCollection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemoryCollection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade
  isExternal: true
  name: IOutputTranslationMemoryCollection
  nameWithType: IOutputTranslationMemoryCollection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.Upgrade.IOutputTranslationMemoryCollection

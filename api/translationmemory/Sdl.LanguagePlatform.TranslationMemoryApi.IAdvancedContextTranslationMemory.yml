### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory
  id: IAdvancedContextTranslationMemory
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType
  - Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesIdContextMatching
  - Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesLegacyHashes
  langs:
  - csharp
  - vb
  name: IAdvancedContextTranslationMemory
  nameWithType: IAdvancedContextTranslationMemory
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory
  type: Interface
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nProvides information about TM support for advanced context matching functionality\n"
  syntax:
    content: public interface IAdvancedContextTranslationMemory
    content.vb: Public Interface IAdvancedContextTranslationMemory
  extensionMethods:
  - System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesLegacyHashes
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesLegacyHashes
  id: UsesLegacyHashes
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory
  langs:
  - csharp
  - vb
  name: UsesLegacyHashes
  nameWithType: IAdvancedContextTranslationMemory.UsesLegacyHashes
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesLegacyHashes
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nReturns true if the TM is using legacy segment hashing (and can therefore consume legacy context information in TMX without conversion)\n"
  syntax:
    content: bool UsesLegacyHashes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property UsesLegacyHashes As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesLegacyHashes*
  modifiers.csharp:
  - get
  - set
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesIdContextMatching
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesIdContextMatching
  id: UsesIdContextMatching
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory
  langs:
  - csharp
  - vb
  name: UsesIdContextMatching
  nameWithType: IAdvancedContextTranslationMemory.UsesIdContextMatching
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesIdContextMatching
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nReturns true if the TM was created with support for ID-based context matching\n"
  syntax:
    content: bool UsesIdContextMatching { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property UsesIdContextMatching As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesIdContextMatching*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType
  id: TextContextMatchType
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory
  langs:
  - csharp
  - vb
  name: TextContextMatchType
  nameWithType: IAdvancedContextTranslationMemory.TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nReturns the type of <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType\" data-throw-if-not-resolved=\"false\"></xref> specified when the TM was created\n"
  syntax:
    content: TextContextMatchType TextContextMatchType { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
    content.vb: ReadOnly Property TextContextMatchType As TextContextMatchType
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object.Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  parent: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  definition: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  name: ForWindowFromFrameworkElement(Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  commentId: M:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
  isExternal: true
  name: ForWindowFromFrameworkElement(Object, Action<Window>)
  nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action<Window>)
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action<System.Windows.Window>)
  nameWithType.vb: WindowsControlUtils.ForWindowFromFrameworkElement(Object, Action(Of Window))
  fullName.vb: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object, System.Action(Of System.Windows.Window))
  name.vb: ForWindowFromFrameworkElement(Object, Action(Of Window))
  spec.csharp:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement(System.Object,System.Action{System.Windows.Window})
    name: ForWindowFromFrameworkElement
    nameWithType: WindowsControlUtils.ForWindowFromFrameworkElement
    fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils.ForWindowFromFrameworkElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: System.Windows.Window
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  commentId: T:Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
  parent: Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: WindowsControlUtils
  nameWithType: WindowsControlUtils
  fullName: Sdl.Desktop.Platform.Controls.Controls.WindowsControlUtils
- uid: Sdl.Desktop.Platform.Controls.Controls
  commentId: N:Sdl.Desktop.Platform.Controls.Controls
  isExternal: true
  name: Sdl.Desktop.Platform.Controls.Controls
  nameWithType: Sdl.Desktop.Platform.Controls.Controls
  fullName: Sdl.Desktop.Platform.Controls.Controls
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesLegacyHashes*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesLegacyHashes
  isExternal: true
  name: UsesLegacyHashes
  nameWithType: IAdvancedContextTranslationMemory.UsesLegacyHashes
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesLegacyHashes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesIdContextMatching*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesIdContextMatching
  isExternal: true
  name: UsesIdContextMatching
  nameWithType: IAdvancedContextTranslationMemory.UsesIdContextMatching
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.UsesIdContextMatching
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType
  isExternal: true
  name: TextContextMatchType
  nameWithType: IAdvancedContextTranslationMemory.TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.IAdvancedContextTranslationMemory.TextContextMatchType
- uid: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType
  isExternal: true
  name: TextContextMatchType
  nameWithType: TextContextMatchType
  fullName: Sdl.LanguagePlatform.TranslationMemory.TextContextMatchType

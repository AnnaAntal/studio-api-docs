### YamlMime:ManagedReference
items:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  id: TranslationMemoryImporter
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  children:
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.BatchImported
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import(System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport(System.String)
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported(System.Nullable{Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion})
  - Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  langs:
  - csharp
  - vb
  name: TranslationMemoryImporter
  nameWithType: TranslationMemoryImporter
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  type: Class
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nThis class exposes functionality to import a bilingual TMX file or a bilingual document into a translation memory.\n"
  syntax:
    content: 'public class TranslationMemoryImporter : Importer'
    content.vb: >-
      Public Class TranslationMemoryImporter
          Inherits Importer
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor
  id: '#ctor'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: TranslationMemoryImporter()
  nameWithType: TranslationMemoryImporter.TranslationMemoryImporter()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryImporter()
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public TranslationMemoryImporter()
    content.vb: Public Sub New
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)
  id: '#ctor(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)'
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: TranslationMemoryImporter(ITranslationMemoryLanguageDirection)
  nameWithType: TranslationMemoryImporter.TranslationMemoryImporter(ITranslationMemoryLanguageDirection)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryImporter(Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection)
  type: Constructor
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nInitializes a new instance of the <xref href=\"Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public TranslationMemoryImporter(ITranslationMemoryLanguageDirection languageDirection)
    parameters:
    - id: languageDirection
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
      description: The language direction.
    content.vb: Public Sub New(languageDirection As ITranslationMemoryLanguageDirection)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import(System.String)
  id: Import(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: Import(String)
  nameWithType: TranslationMemoryImporter.Import(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nStarts the import from the specified file.\n"
  syntax:
    content: public void Import(string fileName)
    parameters:
    - id: fileName
      type: System.String
      description: The file name.
    content.vb: Public Sub Import(fileName As String)
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
  id: GetServerImportStatus
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: GetServerImportStatus()
  nameWithType: TranslationMemoryImporter.GetServerImportStatus()
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus()
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nChecks the server for the import status\n"
  syntax:
    content: public ServerImportStatus GetServerImportStatus()
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ServerImportStatus
    content.vb: Public Function GetServerImportStatus As ServerImportStatus
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported(System.Nullable{Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion})
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported(System.Nullable{Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion})
  id: IsTmServiceSupported(System.Nullable{Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion})
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: IsTmServiceSupported(Nullable<ServerBasedTranslationMemoryVersion>)
  nameWithType: TranslationMemoryImporter.IsTmServiceSupported(Nullable<ServerBasedTranslationMemoryVersion>)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported(System.Nullable<Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion>)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCheck if the the import can be done using TmService\n"
  syntax:
    content: public static bool IsTmServiceSupported(ServerBasedTranslationMemoryVersion? serverBasedTranslationMemoryVersion)
    parameters:
    - id: serverBasedTranslationMemoryVersion
      type: System.Nullable{Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion}
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsTmServiceSupported(serverBasedTranslationMemoryVersion As ServerBasedTranslationMemoryVersion?) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported*
  nameWithType.vb: TranslationMemoryImporter.IsTmServiceSupported(Nullable(Of ServerBasedTranslationMemoryVersion))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported(System.Nullable(Of Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion))
  name.vb: IsTmServiceSupported(Nullable(Of ServerBasedTranslationMemoryVersion))
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport(System.String)
  commentId: M:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport(System.String)
  id: IsSupportedByTmServiceImport(System.String)
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: IsSupportedByTmServiceImport(String)
  nameWithType: TranslationMemoryImporter.IsSupportedByTmServiceImport(String)
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport(System.String)
  type: Method
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nCheck if the file is supported for TMService import\n"
  syntax:
    content: public static bool IsSupportedByTmServiceImport(string file)
    parameters:
    - id: file
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsSupportedByTmServiceImport(file As String) As Boolean
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  commentId: P:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  id: TranslationMemoryLanguageDirection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: TranslationMemoryLanguageDirection
  nameWithType: TranslationMemoryImporter.TranslationMemoryLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  type: Property
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nGets or sets the translation memory language direction.\n"
  syntax:
    content: public ITranslationMemoryLanguageDirection TranslationMemoryLanguageDirection { get; }
    parameters: []
    return:
      type: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
      description: The translation memory language direction.
    content.vb: Public ReadOnly Property TranslationMemoryLanguageDirection As ITranslationMemoryLanguageDirection
  overload: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.BatchImported
  commentId: E:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.BatchImported
  id: BatchImported
  parent: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter
  langs:
  - csharp
  - vb
  name: BatchImported
  nameWithType: TranslationMemoryImporter.BatchImported
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.BatchImported
  type: Event
  source:
    path: Sdl.LanguagePlatform.TranslationMemoryApi
    isExternal: true
  assemblies:
  - Sdl.LanguagePlatform.TranslationMemoryApi
  namespace: Sdl.LanguagePlatform.TranslationMemoryApi
  summary: "\nOccurs when a TU batch is imported\n"
  remarks: Hides the base class event (which our handler re-fires through this one) so that existing client code will see no namespace change after refactoring
  syntax:
    content: public event EventHandler<BatchImportedEventArgs> BatchImported
    return:
      type: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs}
    content.vb: Public Event BatchImported As EventHandler(Of BatchImportedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sdl.LanguagePlatform.TranslationMemoryApi
  commentId: N:Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: Sdl.LanguagePlatform.TranslationMemoryApi
  nameWithType: Sdl.LanguagePlatform.TranslationMemoryApi
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.#ctor
  isExternal: true
  name: TranslationMemoryImporter
  nameWithType: TranslationMemoryImporter.TranslationMemoryImporter
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryImporter
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ITranslationMemoryLanguageDirection
  nameWithType: ITranslationMemoryLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ITranslationMemoryLanguageDirection
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import
  isExternal: true
  name: Import
  nameWithType: TranslationMemoryImporter.Import
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.Import
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
  isExternal: true
  name: GetServerImportStatus
  nameWithType: TranslationMemoryImporter.GetServerImportStatus
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.GetServerImportStatus
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.ServerImportStatus
  commentId: T:Sdl.LanguagePlatform.TranslationMemoryApi.ServerImportStatus
  parent: Sdl.LanguagePlatform.TranslationMemoryApi
  isExternal: true
  name: ServerImportStatus
  nameWithType: ServerImportStatus
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ServerImportStatus
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported
  isExternal: true
  name: IsTmServiceSupported
  nameWithType: TranslationMemoryImporter.IsTmServiceSupported
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsTmServiceSupported
- uid: System.Nullable{Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion}
  commentId: T:System.Nullable{Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ServerBasedTranslationMemoryVersion>
  nameWithType: Nullable<ServerBasedTranslationMemoryVersion>
  fullName: System.Nullable<Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion>
  nameWithType.vb: Nullable(Of ServerBasedTranslationMemoryVersion)
  fullName.vb: System.Nullable(Of Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion)
  name.vb: Nullable(Of ServerBasedTranslationMemoryVersion)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion
    name: ServerBasedTranslationMemoryVersion
    nameWithType: ServerBasedTranslationMemoryVersion
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion
    name: ServerBasedTranslationMemoryVersion
    nameWithType: ServerBasedTranslationMemoryVersion
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.ServerBasedTranslationMemoryVersion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport
  isExternal: true
  name: IsSupportedByTmServiceImport
  nameWithType: TranslationMemoryImporter.IsSupportedByTmServiceImport
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.IsSupportedByTmServiceImport
- uid: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection*
  commentId: Overload:Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
  isExternal: true
  name: TranslationMemoryLanguageDirection
  nameWithType: TranslationMemoryImporter.TranslationMemoryLanguageDirection
  fullName: Sdl.LanguagePlatform.TranslationMemoryApi.TranslationMemoryImporter.TranslationMemoryLanguageDirection
- uid: System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs}
  commentId: T:System.EventHandler{Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BatchImportedEventArgs>
  nameWithType: EventHandler<BatchImportedEventArgs>
  fullName: System.EventHandler<Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs>
  nameWithType.vb: EventHandler(Of BatchImportedEventArgs)
  fullName.vb: System.EventHandler(Of Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs)
  name.vb: EventHandler(Of BatchImportedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs
    name: BatchImportedEventArgs
    nameWithType: BatchImportedEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs
    name: BatchImportedEventArgs
    nameWithType: BatchImportedEventArgs
    fullName: Sdl.LanguagePlatform.TranslationMemoryApi.BatchImportedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
